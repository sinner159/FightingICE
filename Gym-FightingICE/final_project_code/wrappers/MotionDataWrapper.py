from final_project_code.wrappers.HitAreaWrapper import HitAreaWrapper
class MotionDataWrapper():

    def __init__(self, motionData):
        self.actionName = motionData.getActionName()
        self.attackActive = motionData.getAttackActive()
        self.attackGiveEnergy = motionData.getAttackGiveEnergy()
        self.attackGiveGuardRecov = motionData.getAttackGiveGuardRecov()
        self.attackGuardAddEnergy = motionData.getAttackGuardAddEnergy()
        self.attackGuardDamage = motionData.getAttackGuardDamage()
        self.attackHitAddEnergy = motionData.getAttackHitAddEnergy()
        self.attackHitArea = HitAreaWrapper(motionData.getAttackHitArea())
        self.attackHitDamage = motionData.getAttackHitDamage()
        self.attackImpactX = motionData.getAttackImpactX()
        self.attackImpactY = motionData.getAttackImpactY()
        self.attackSpeedX = motionData.getAttackSpeedX()
        self.attackSpeedY = motionData.getAttackSpeedY()
        self.attackStartAddEnergy = motionData.getAttackStartAddEnergy()
        self.attackStartUp = motionData.getAttackStartUp()
        self.attackType = motionData.getAttackType()
        self.cancelAbleFrame = motionData.getCancelAbleFrame()
        self.cancelAbleMotionLevel = motionData.getCancelAbleMotionLevel()
        self.characterHitArea = HitAreaWrapper(motionData.getCharacterHitArea())
        self.frameNumber = motionData.getFrameNumber()
        self.motionLevel = motionData.getMotionLevel()
        self.speedX = motionData.getSpeedX()
        self.speedY = motionData.getSpeedY()
        self.state = motionData.getState()
        self.attackDownProp = motionData.isAttackDownProp()
        self.control = motionData.isControl()
        self.LandingFlag = motionData.isLandingFlag()
        self.state = motionData.getState()

    def getFromCSV(self,data):
        self.actionName = data[0]
        self.frameNumber = int(data[1])
        self.speedX = int(data[2])
        self.speedY = int(data[3])
        #self.characterHitArea = HitAreaWrapper(int(data[4]), int(data[5]), int(data[6]), int(data[7]))
        #self.state = CharacterStateWrapper(data[8])
        #self.attackHitArea = HitAreaWrapper(int(data[9]), int(data[10]), int(data[11]), int(data[12]))
        self.attackSpeedX = int(data[13])
        self.attackSpeedY = int(data[14])
        self.attackStartUp = int(data[15])
        self.attackActive = int(data[16])
        self.attackHitDamage = int(data[17])
        self.attackGuardDamage = int(data[18])
        self.attackStartAddEnergy = int(data[19])
        self.attackHitAddEnergy = int(data[20])
        self.attackGuardAddEnergy = int(data[21])
        self.attackGiveEnergy = int(data[22])
        self.attackImpactX = int(data[23])
        self.attackImpactY = int(data[24])
        self.attackGiveGuardRecov = int(data[25])
        self.attackType = int(data[26])
        self.attackDownProp = bool(data[27])
        self.cancelAbleFrame = int(data[28])
        self.cancelAbleMotionLevel = int(data[29])
        self.motionLevel = int(data[30])
        self.control = bool(data[31])
        self.landingFlag = bool(data[32])